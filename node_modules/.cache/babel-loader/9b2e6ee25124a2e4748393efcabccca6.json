{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT\\\\react-learning\\\\src\\\\components\\\\croppertest\\\\CropperImage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Box, Button, Card, CardContent, CardHeader, Divider } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport \"src/components/croppertest//CropperImage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSrc = \"https://raw.githubusercontent.com/roadmanfong/react-cropper/master/example/img/child.jpg\";\n\nconst CropperImage = props => {\n  _s();\n\n  const [image, setImage] = useState(defaultSrc);\n  const [cropData, setCropData] = useState(\"#\");\n  const [cropper, setCropper] = useState();\n\n  const onChange = e => {\n    e.preventDefault();\n    let files;\n\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      setImage(reader.result);\n    };\n\n    reader.readAsDataURL(files[0]);\n  };\n\n  const getCropData = () => {\n    if (typeof cropper !== \"undefined\") {\n      setCropData(cropper.getCroppedCanvas().toDataURL());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        endIcon: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }, this),\n        size: \"small\",\n        variant: \"text\",\n        children: \"Last 7 days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this),\n      title: \"Latest Sales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Use default img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Cropper, {\n            style: {\n              height: 400,\n              width: \"100%\"\n            },\n            zoomTo: 0,\n            initialAspectRatio: 1,\n            preview: \".img-preview\",\n            src: image,\n            viewMode: 1,\n            guides: true,\n            minCropBoxHeight: 10,\n            minCropBoxWidth: 10,\n            background: false,\n            responsive: true,\n            autoCropArea: 1,\n            checkOrientation: false // https://github.com/fengyuanchen/cropperjs/issues/671\n            ,\n            onInitialized: instance => {\n              setCropper(instance);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box\",\n            style: {\n              width: \"50%\",\n              float: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img-preview\",\n              style: {\n                width: \"100%\",\n                float: \"left\",\n                height: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box\",\n            style: {\n              width: \"50%\",\n              float: \"right\",\n              height: \"300px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Crop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  float: \"right\"\n                },\n                onClick: getCropData,\n                children: \"Crop Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: \"100%\"\n              },\n              src: cropData,\n              alt: \"cropped\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {\n          style: {\n            clear: \"both\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CropperImage, \"d5w+IywZRqRBNBj7oYXipvPZQBY=\");\n\n_c = CropperImage;\nexport default CropperImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CropperImage\");","map":{"version":3,"sources":["D:/PROJECT/react-learning/src/components/croppertest/CropperImage.js"],"names":["useState","Box","Button","Card","CardContent","CardHeader","Divider","ArrowDropDownIcon","ArrowRightIcon","Cropper","defaultSrc","CropperImage","props","image","setImage","cropData","setCropData","cropper","setCropper","onChange","e","preventDefault","files","dataTransfer","target","reader","FileReader","onload","result","readAsDataURL","getCropData","getCroppedCanvas","toDataURL","width","height","instance","float","clear"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,OANF,QAOO,mBAPP;AAQA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAO,4BAAP;AACA,OAAO,8CAAP;;AAEA,MAAMC,UAAU,GAAG,0FAAnB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACU,UAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,GAAD,CAAxC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,EAAtC;;AACA,QAAMmB,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,KAAJ;;AACA,QAAIF,CAAC,CAACG,YAAN,EAAoB;AAClBD,MAAAA,KAAK,GAAGF,CAAC,CAACG,YAAF,CAAeD,KAAvB;AACD,KAFD,MAEO,IAAIF,CAAC,CAACI,MAAN,EAAc;AACnBF,MAAAA,KAAK,GAAGF,CAAC,CAACI,MAAF,CAASF,KAAjB;AACD;;AACD,UAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AACpBb,MAAAA,QAAQ,CAACW,MAAM,CAACG,MAAR,CAAR;AACD,KAFD;;AAGAH,IAAAA,MAAM,CAACI,aAAP,CAAqBP,KAAK,CAAC,CAAD,CAA1B;AACD,GAbD;;AAeA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAI,OAAOb,OAAP,KAAmB,WAAvB,EAAoC;AAClCD,MAAAA,WAAW,CAACC,OAAO,CAACc,gBAAR,GAA2BC,SAA3B,EAAD,CAAX;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,IAAD,OAAUpB,KAAV;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,MAAM,eACJ,QAAC,MAAD;AACE,QAAA,OAAO,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBADX;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAUE,MAAA,KAAK,EAAC;AAVR;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,WAAD;AAAA,6BACE;AAAA,gCACE;AAAK,UAAA,KAAK,EAAE;AAAEqB,YAAAA,KAAK,EAAE;AAAT,WAAZ;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAEd;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,OAAD;AACI,YAAA,KAAK,EAAE;AAAEe,cAAAA,MAAM,EAAE,GAAV;AAAeD,cAAAA,KAAK,EAAE;AAAtB,aADX;AAEI,YAAA,MAAM,EAAE,CAFZ;AAGI,YAAA,kBAAkB,EAAE,CAHxB;AAII,YAAA,OAAO,EAAC,cAJZ;AAKI,YAAA,GAAG,EAAEpB,KALT;AAMI,YAAA,QAAQ,EAAE,CANd;AAOI,YAAA,MAAM,EAAE,IAPZ;AAQI,YAAA,gBAAgB,EAAE,EARtB;AASI,YAAA,eAAe,EAAE,EATrB;AAUI,YAAA,UAAU,EAAE,KAVhB;AAWI,YAAA,UAAU,EAAE,IAXhB;AAYI,YAAA,YAAY,EAAE,CAZlB;AAaI,YAAA,gBAAgB,EAAE,KAbtB,CAa6B;AAb7B;AAcI,YAAA,aAAa,EAAGsB,QAAD,IAAc;AAC3BjB,cAAAA,UAAU,CAACiB,QAAD,CAAV;AACD;AAhBL;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAyBE;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAqB,YAAA,KAAK,EAAE;AAAEF,cAAAA,KAAK,EAAE,KAAT;AAAgBG,cAAAA,KAAK,EAAE;AAAvB,aAA5B;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACI,cAAA,SAAS,EAAC,aADd;AAEI,cAAA,KAAK,EAAE;AAAEH,gBAAAA,KAAK,EAAE,MAAT;AAAiBG,gBAAAA,KAAK,EAAE,MAAxB;AAAgCF,gBAAAA,MAAM,EAAE;AAAxC;AAFX;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AACI,YAAA,SAAS,EAAC,KADd;AAEI,YAAA,KAAK,EAAE;AAAED,cAAAA,KAAK,EAAE,KAAT;AAAgBG,cAAAA,KAAK,EAAE,OAAvB;AAAgCF,cAAAA,MAAM,EAAE;AAAxC,aAFX;AAAA,oCAIE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,KAAK,EAAE;AAAEE,kBAAAA,KAAK,EAAE;AAAT,iBAAf;AAAmC,gBAAA,OAAO,EAAEN,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAUE;AAAK,cAAA,KAAK,EAAE;AAAEG,gBAAAA,KAAK,EAAE;AAAT,eAAZ;AAA+B,cAAA,GAAG,EAAElB,QAApC;AAA8C,cAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA8CE;AAAI,UAAA,KAAK,EAAE;AAAEsB,YAAAA,KAAK,EAAE;AAAT;AAAX;AAAA;AAAA;AAAA;AAAA,gBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmED,CA5FD;;GAAM1B,Y;;KAAAA,Y;AA8FN,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport \"src/components/croppertest//CropperImage.css\";\r\n\r\nconst defaultSrc = \"https://raw.githubusercontent.com/roadmanfong/react-cropper/master/example/img/child.jpg\";\r\n\r\nconst CropperImage = (props) => {\r\n  const [image, setImage] = useState(defaultSrc);\r\n  const [cropData, setCropData] = useState(\"#\");\r\n  const [cropper, setCropper] = useState();\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    let files;\r\n    if (e.dataTransfer) {\r\n      files = e.dataTransfer.files;\r\n    } else if (e.target) {\r\n      files = e.target.files;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImage(reader.result);\r\n    };\r\n    reader.readAsDataURL(files[0]);\r\n  };\r\n\r\n  const getCropData = () => {\r\n    if (typeof cropper !== \"undefined\") {\r\n      setCropData(cropper.getCroppedCanvas().toDataURL());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div>\r\n          <div style={{ width: \"100%\" }}>\r\n            <input type=\"file\" onChange={onChange} />\r\n            <button>Use default img</button>\r\n            <br />\r\n            <br />\r\n            <Cropper\r\n                style={{ height: 400, width: \"100%\" }}\r\n                zoomTo={0}\r\n                initialAspectRatio={1}\r\n                preview=\".img-preview\"\r\n                src={image}\r\n                viewMode={1}\r\n                guides={true}\r\n                minCropBoxHeight={10}\r\n                minCropBoxWidth={10}\r\n                background={false}\r\n                responsive={true}\r\n                autoCropArea={1}\r\n                checkOrientation={false} // https://github.com/fengyuanchen/cropperjs/issues/671\r\n                onInitialized={(instance) => {\r\n                  setCropper(instance);\r\n                }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div className=\"box\" style={{ width: \"50%\", float: \"right\" }}>\r\n              <h1>Preview</h1>\r\n              <div\r\n                  className=\"img-preview\"\r\n                  style={{ width: \"100%\", float: \"left\", height: \"300px\" }}\r\n              />\r\n            </div>\r\n            <div\r\n                className=\"box\"\r\n                style={{ width: \"50%\", float: \"right\", height: \"300px\" }}\r\n            >\r\n              <h1>\r\n                <span>Crop</span>\r\n                <button style={{ float: \"right\" }} onClick={getCropData}>\r\n                  Crop Image\r\n                </button>\r\n              </h1>\r\n              <img style={{ width: \"100%\" }} src={cropData} alt=\"cropped\" />\r\n            </div>\r\n          </div>\r\n          <br style={{ clear: \"both\" }} />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CropperImage;\r\n"]},"metadata":{},"sourceType":"module"}