{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT\\\\react-learning\\\\src\\\\components\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport Navbar from './Navbar';\nimport Sidebar from './Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardLayoutRoot = experimentalStyled('div')(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.default,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%'\n}));\nconst DashboardLayoutWrapper = experimentalStyled('div')(({\n  theme\n}) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 256\n  }\n}));\nconst DashboardLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\nconst DashboardLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst Layout = () => {\n  _s();\n\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(DashboardLayoutRoot, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onMobileNavOpen: () => setMobileNavOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      onMobileClose: () => setMobileNavOpen(false),\n      openMobile: isMobileNavOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DashboardLayoutWrapper, {\n      children: /*#__PURE__*/_jsxDEV(DashboardLayoutContainer, {\n        children: /*#__PURE__*/_jsxDEV(DashboardLayoutContent, {\n          children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Layout, \"cFeSW2VVppyAveewH6Fkr6zm1rM=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["D:/PROJECT/react-learning/src/components/Layout.js"],"names":["useState","Outlet","experimentalStyled","Navbar","Sidebar","DashboardLayoutRoot","theme","backgroundColor","palette","background","default","display","height","overflow","width","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","Layout","isMobileNavOpen","setMobileNavOpen"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,mBAAmB,GAAGH,kBAAkB,CAAC,KAAD,CAAlB,CAC1B,CAAC;AAAEI,EAAAA;AAAF,CAAD,MAAgB;AACdC,EAAAA,eAAe,EAAED,KAAK,CAACE,OAAN,CAAcC,UAAd,CAAyBC,OAD5B;AAEdC,EAAAA,OAAO,EAAE,MAFK;AAGdC,EAAAA,MAAM,EAAE,MAHM;AAIdC,EAAAA,QAAQ,EAAE,QAJI;AAKdC,EAAAA,KAAK,EAAE;AALO,CAAhB,CAD0B,CAA5B;AAUA,MAAMC,sBAAsB,GAAGb,kBAAkB,CAAC,KAAD,CAAlB,CAC7B,CAAC;AAAEI,EAAAA;AAAF,CAAD,MAAgB;AACdK,EAAAA,OAAO,EAAE,MADK;AAEdK,EAAAA,IAAI,EAAE,UAFQ;AAGdH,EAAAA,QAAQ,EAAE,QAHI;AAIdI,EAAAA,UAAU,EAAE,EAJE;AAKd,GAACX,KAAK,CAACY,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BC,IAAAA,WAAW,EAAE;AADe;AALhB,CAAhB,CAD6B,CAA/B;AAYA,MAAMC,wBAAwB,GAAGnB,kBAAkB,CAAC,KAAD,CAAlB,CAA0B;AACzDS,EAAAA,OAAO,EAAE,MADgD;AAEzDK,EAAAA,IAAI,EAAE,UAFmD;AAGzDH,EAAAA,QAAQ,EAAE;AAH+C,CAA1B,CAAjC;AAMA,MAAMS,sBAAsB,GAAGpB,kBAAkB,CAAC,KAAD,CAAlB,CAA0B;AACvDc,EAAAA,IAAI,EAAE,UADiD;AAEvDJ,EAAAA,MAAM,EAAE,MAF+C;AAGvDC,EAAAA,QAAQ,EAAE;AAH6C,CAA1B,CAA/B;;AAMA,MAAMU,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,eAAD,EAAkBC,gBAAlB,IAAsCzB,QAAQ,CAAC,KAAD,CAApD;AAEA,sBACE,QAAC,mBAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,eAAe,EAAE,MAAMyB,gBAAgB,CAAC,IAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AACE,MAAA,aAAa,EAAE,MAAMA,gBAAgB,CAAC,KAAD,CADvC;AAEE,MAAA,UAAU,EAAED;AAFd;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,sBAAD;AAAA,6BACE,QAAC,wBAAD;AAAA,+BACE,QAAC,sBAAD;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnBD;;GAAMD,M;;KAAAA,M;AAqBN,eAAeA,MAAf","sourcesContent":["import { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\nimport Navbar from './Navbar';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst DashboardLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst DashboardLayoutWrapper = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  })\r\n);\r\n\r\nconst DashboardLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst DashboardLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst Layout = () => {\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <Navbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <Sidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}